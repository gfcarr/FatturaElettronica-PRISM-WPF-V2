<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:math="http://hexinnovation.com/math">

    <!--Colori per le righe alternate delle listbox dei filtri-->
    <AlternationConverter x:Key="BackgroundConverter">
        <SolidColorBrush Color="#FFEFF6FF" />
        <SolidColorBrush Color="White" />
        <!--<SolidColorBrush Color="#19f39611" />
        <SolidColorBrush Color="#19000000" />-->
    </AlternationConverter>

    <!--Tema per i ListBoxItem dei Filtri di Ricerca delle Fatture Elettroniche-->
    <Style x:Key="FiltriVerticaliTheme" TargetType="{x:Type ListBoxItem}">
        <!--Impostazioni Generali-->
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Height" Value="32"/>
        <!--Template per impostare le caratteristiche del ListBoxItem col nominativo del cliente o del fornitore
            - un bordo arrotondato, contenente un pannello orizzontale con:
            - immagine di un utente
            - cerchio col numero di elementi (fatture) relatice a quel nominativo (cliente / fornitore)
            - denominazione del cliente o del fornitore
            - il primo elemento (Tutti) ha il colore di fondo Turchese, colore di primo piano (testo) Bianco, font 14, corsivo, grassetto
            -ed il cerchio col conteggio di un altro colore
        -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">

                    <!-- bordo esterno arrotondato che contiene tutto -->
                    <Border Name="OuterBorder" 
                        CornerRadius="16"
                        Background="{TemplateBinding Background}">

                        <!-- pannello orizzontale che contiene tutto -->
                        <StackPanel Orientation="Horizontal">

                            <!-- immagine stilizzata di un utente, se è il 1° item immagine di più utenti-->
                            <Image HorizontalAlignment="Center" Margin="3" Stretch="Fill">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Setter Property="Source" Value="../Resources/user.png"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
                                                <Setter Property="Source" Value="../Resources/userAll.png"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>

                            <!-- Bordo a forma di cerchio che contiene una TextBlock per il conteggio degli elementi relativi all'item selezionato
                                 (il numero di fatture relative al cliente o al fornitore selezionato)
                                 se è il 1° elemento il colore del testo e del fondo sono diversi
                             -->
                            <Border Height="26" CornerRadius="13" BorderThickness="2" BorderBrush="White">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Setter Property="Background" Value="#FF005656"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
                                                <Setter Property="Background" Value="#FFFFDD56"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <TextBlock Text="{Binding Frequenza}" Height="26" Width="24"  TextAlignment="Center" Margin="0,2,0,0"                   
                                            FontSize="11" FontWeight="Bold" >
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Foreground" Value="White"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
                                                    <Setter Property="Foreground" Value="Black"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Border>

                            <!-- TextBlok con la Denominazione del cliente / fornitore-->
                            <TextBlock Name="ListBoxItemContent" Margin="3,7,0,0" Text="{Binding Denominazione}">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="FontStyle" Value="Normal"/>
                                        <Setter Property="FontWeight" Value="Normal"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
                                                <Setter Property="FontStyle" Value="Italic"/>
                                                <Setter Property="FontWeight" Value="DemiBold"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>

                        </StackPanel>
                    </Border>

                    <!-- Triggers per gli eventi:
                         - se l'item è selezionato lo sfondo diventa turchese ed il testo diventa bianco
                         - se l'item non è selezionato il testo è nero
                         - se non è abilitato il testo diventa azzurro chiaro
                    -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="OuterBorder" Property="Background" Value="#FF2EAFEB"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Foreground" Value="Black"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="LightBlue"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--Imposta il colore di sfondo alternato su 2 righe (AlternationCount=2) con i colori definiti nel BackgroundConverter-->
        <Setter Property="Background"
                Value="{Binding RelativeSource={RelativeSource Self}, Path=(ItemsControl.AlternationIndex), Converter={StaticResource BackgroundConverter}}"/>
    </Style>



    <Style x:Key="FiltriVerticaliListBoxTheme" TargetType="{x:Type ListBox}">
        <Setter Property="AlternationCount" Value="2"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
    </Style>

    <Style x:Key="FiltriOrizzontaliListBoxItemsTheme" TargetType="ListBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Name="itemBorder" CornerRadius="12" BorderBrush="Transparent">
                        <TextBlock Name="itemTB" Text="{Binding}" Padding="10,0,10,0"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Blue"/>
                            <Setter TargetName="itemBorder" Property="Background" Value="White"/>
                            <Setter Property="FontWeight" Value="DemiBold"/>
                            <Setter Property="FontStyle" Value="Italic"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="FontSize" Value="18"/>
                            <Setter Property="FontWeight" Value="DemiBold"/>
                            <Setter Property="FontStyle" Value="Italic"/>
                            <Setter TargetName="itemTB" Property="TextDecorations" Value="Underline"/>
                            <Setter TargetName="itemBorder" Property="Background" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers> 
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HorizontalListBoxStyle" TargetType="ListBox">
        <Setter Property="Height" Value="25"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Margin" Value="0,10,0,0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsItemsHost="True" Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>





</ResourceDictionary>



<!-- OLD OLD non più usato
    <Style x:Key="DisableFilterButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
        <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
                <StackPanel Orientation="Horizontal" >
                    <Image Name="ImageForButton" Source="../Resources/ButtonDisable_EnabledImage.png" />
                </StackPanel>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsEnabled" Value="True">
                        <Setter Property="Source" Value="../Resources/ButtonDisable_EnabledImage.png" TargetName="ImageForButton"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Source" Value="../Resources/ButtonDisable_DisabledImage.png" TargetName="ImageForButton"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Setter.Value>
    </Setter>
</Style>-->


<!-- OLD OLD non più usato
                                   TextBlock per il conteggio, se è il 1° elemento i colori sono diversi
                                   cerchio pieno col conteggio degli elementi ricercati relativi a quel ListBoxItem 
                                   se è il 1° (Tutti) cambia colore del cerchio e del testo 
                         
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Padding="8" FontSize="10" FontWeight="Bold"                                     Text="{Binding Path=Frequenza}">
                              <TextBlock.Style>
                                  <Style TargetType="TextBlock">
                                      <Setter Property="Foreground" Value="White"/>
                                      <Setter Property="Background">
                                          <Setter.Value>
                                              <VisualBrush>
                                                  <VisualBrush.Visual>
                                                      <Ellipse Fill="#FF005656" Stroke="White" StrokeThickness="1"
                                                               Height="20" Width="20"/>
                                                  </VisualBrush.Visual>
                                              </VisualBrush>
                                          </Setter.Value>
                                      </Setter>
                                      <Style.Triggers>
                                          <DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
                                              <Setter Property="Foreground" Value="Black"/>
                                              <Setter Property="Background">
                                                  <Setter.Value>
                                                      <VisualBrush>
                                                          <VisualBrush.Visual>
                                                              <Ellipse Fill="#FFFFDD56" Stroke="White" StrokeThickness="1"
                                                                       Height="20" Width="20"/>
                                                          </VisualBrush.Visual>
                                                      </VisualBrush>
                                                  </Setter.Value>
                                              </Setter>
                                          </DataTrigger>
                                      </Style.Triggers>
                                  </Style>
                              </TextBlock.Style>
                          </TextBlock>
    -->




